# ===================================================================
# CINERECOMMEND - REQUIREMENTS
# Système de Recommandation de Films Intelligent
# ===================================================================

# ===================================================================
# CORE DATA SCIENCE & MACHINE LEARNING
# ===================================================================

# Data manipulation and analysis
pandas>=2.1.0
numpy>=1.24.0
scipy>=1.11.0

# Machine Learning
scikit-learn>=1.3.0
surprise>=1.1.3
imbalanced-learn>=0.11.0

# Deep Learning (optional)
# tensorflow>=2.13.0
# torch>=2.0.0
# transformers>=4.30.0

# ===================================================================
# WEB FRAMEWORKS & API
# ===================================================================

# FastAPI ecosystem
fastapi>=0.104.0
uvicorn[standard]>=0.24.0
pydantic>=2.4.0
pydantic-settings>=2.0.0

# HTTP client
httpx>=0.25.0
requests>=2.31.0

# Authentication & Security
python-jose[cryptography]>=3.3.0
passlib[bcrypt]>=1.7.4
python-multipart>=0.0.6

# ===================================================================
# STREAMLIT & UI
# ===================================================================

streamlit>=1.28.0
streamlit-option-menu>=0.3.6
streamlit-aggrid>=0.3.4
streamlit-plotly>=0.0.1
streamlit-authenticator>=0.2.3

# ===================================================================
# VISUALIZATION & PLOTTING
# ===================================================================

plotly>=5.17.0
matplotlib>=3.7.0
seaborn>=0.12.0
altair>=5.1.0
bokeh>=3.2.0

# ===================================================================
# UTILITIES & HELPERS
# ===================================================================

# Configuration
pyyaml>=6.0.1
python-dotenv>=1.0.0
click>=8.1.0

# Logging & Monitoring
loguru>=0.7.0
rich>=13.5.0

# File handling
openpyxl>=3.1.0
xlrd>=2.0.1

# ===================================================================
# DEVELOPMENT & TESTING
# ===================================================================

# Testing
pytest>=7.4.0
pytest-cov>=4.1.0
pytest-mock>=3.11.0
pytest-asyncio>=0.21.0

# Code quality
black>=23.7.0
flake8>=6.0.0
isort>=5.12.0
mypy>=1.5.0

# Documentation
mkdocs>=1.5.0
mkdocs-material>=9.2.0

# ===================================================================
# OPTIONAL: ADVANCED ML & DEEP LEARNING
# ===================================================================

# Uncomment if needed for advanced features
# lightgbm>=4.0.0
# xgboost>=1.7.0
# catboost>=1.2.0
# optuna>=3.3.0
# mlflow>=2.6.0

# ===================================================================
# OPTIONAL: SYSTEM & INFRASTRUCTURE
# ===================================================================

# Database
sqlalchemy>=2.0.0
alembic>=1.12.0
# psycopg2-binary>=2.9.0  # PostgreSQL
# pymongo>=4.5.0  # MongoDB

# Caching
redis>=5.0.0

# Task queue
# celery>=5.3.0

# ===================================================================
# OPTIONAL: CONFIGURATION & DEPLOYMENT
# ===================================================================

# Configuration management
# hydra-core>=1.3.0
# omegaconf>=2.3.0

# Monitoring
# prometheus-client>=0.17.0
# grafana-api>=1.0.3

# ===================================================================
# OPTIONAL: PROGRESS & TIME
# ===================================================================

tqdm>=4.66.0
# alive-progress>=3.1.0

# Date and time
# arrow>=1.2.0
# pendulum>=2.1.0

# ===================================================================
# OPTIONAL: MODEL SERIALIZATION
# ===================================================================

joblib>=1.3.0
pickle5>=0.0.12
# dill>=0.3.7

# ===================================================================
# VERSION CONSTRAINTS
# ===================================================================

# Python version requirement
# python_requires = ">=3.9"

# ===================================================================
# NOTES
# ===================================================================
# 
# 1. Les versions sont spécifiées avec >= pour permettre les mises à jour
# 2. Les dépendances optionnelles sont commentées
# 3. Testez toujours après installation: pip install -r requirements.txt
# 4. Pour un environnement de production, considérez l'utilisation de versions exactes
# 5. Utilisez pip-tools pour générer requirements.lock avec des versions exactes
#
# Installation:
# pip install -r requirements.txt
#
# Mise à jour:
# pip install -r requirements.txt --upgrade
#
# Environnement de développement:
# pip install -r requirements.txt -r requirements-dev.txt
# ===================================================================